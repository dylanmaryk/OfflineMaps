The HTML5 application cache provides a simple means by which to locally store the files required to display a website offline automatically, whenever the user loads the page while they are online, ensuring the cached files are updated as frequently as possible. However, it is important to note for the further development of the project that browsers can have different size limits for cached data (http://www.w3schools.com/html/html5_app_cache.asp), hence it is preferable to cache only the minimum necessary to display what it makes sense to be viewable offline. It must be noted that the browser’s cache for a website will not be updated unless the cache manifest, the file which lists all the files on the server to cache, is updated. Therefore, changes to the online version of the website will not be cached while the user is online unless the developer updates the cache manifest. This can be done as simply as changing a comment e.g. “# v1” to “v2”.

The bulk of data storage will be done using technologies such as the indexedDB API, which is designed to store larger amounts of data locally. It has a global limit, the maximum amount of storage space that can be used by the browser for all origins (top level domains), of 50% of free space on the device (https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API/Browser_storage_limits_and_eviction_criteria#Storage_limits). The group limit, the limit for each group of origins, is 20% of the global limit. This must be handled when considering how much map data can be downloaded onto the user’s device. The API is interacted with via JavaScript.